[{"title":"动态规划题型整理","uid":"8b029dc60e9ab65a456ff3b3deb1790a","slug":"动态规划题型整理","date":"2022-01-14T04:48:32.000Z","updated":"2022-01-16T13:17:47.456Z","comments":true,"path":"api/articles/动态规划题型整理.json","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"算法笔记","slug":"算法笔记","count":11,"path":"api/categories/算法笔记.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":11,"path":"api/tags/数据结构与算法.json"},{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/tags/LeetCode.json"}],"author":{"name":"南望","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/db609a2e507d4a36b32e06b4676aad38.PNG","link":"/","description":"路漫漫其修远兮，吾将上下而求索······","socials":{"github":"https://github.com/saw96x","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/saw96x","csdn":"https://blog.csdn.net/saw96x?spm=1001.2101.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"二叉树三种遍历的迭代写法","uid":"dd6a595fe87f1a59685b2c89c539382d","slug":"二叉树四种遍历的迭代写法","date":"2021-11-25T14:49:20.000Z","updated":"2022-02-03T03:54:34.788Z","comments":true,"path":"api/articles/二叉树四种遍历的迭代写法.json","cover":[],"text":"前序遍历前序遍历指的是按根节点、左子节点、右子节点这种顺序遍历的过程，因为最先遍历根节点，因此命名为前序遍历，使用递归算法的话，写法很简单，但耗时较多，因此在追求性能的情况下，我们一般使用迭代算法。迭代算法实际上是把递归算法中的系统调用栈显式的自己写出来。 迭代版前序遍历的过程如...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"算法笔记","slug":"算法笔记","count":11,"path":"api/categories/算法笔记.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":11,"path":"api/tags/数据结构与算法.json"}],"author":{"name":"南望","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/db609a2e507d4a36b32e06b4676aad38.PNG","link":"/","description":"路漫漫其修远兮，吾将上下而求索······","socials":{"github":"https://github.com/saw96x","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/saw96x","csdn":"https://blog.csdn.net/saw96x?spm=1001.2101.3001.5343","juejin":"","customs":{}}},"feature":true},{"title":"LeetCode中的单调栈题","uid":"e132209059bdfe8fd53e19e341dda430","slug":"LeetCode中的单调栈题","date":"2021-11-24T07:43:03.000Z","updated":"2022-01-20T01:42:18.676Z","comments":true,"path":"api/articles/LeetCode中的单调栈题.json","cover":null,"text":"单调栈系列题目单调栈解法的介绍：https://leetcode-cn.com/problems/next-greater-element-i/solution/dan-diao-zhan-jie-jue-next-greater-number-yi-lei-w/ 5. 每日温度...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"算法笔记","slug":"算法笔记","count":11,"path":"api/categories/算法笔记.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":11,"path":"api/tags/数据结构与算法.json"},{"name":"LeetCode","slug":"LeetCode","count":6,"path":"api/tags/LeetCode.json"}],"author":{"name":"南望","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/db609a2e507d4a36b32e06b4676aad38.PNG","link":"/","description":"路漫漫其修远兮，吾将上下而求索······","socials":{"github":"https://github.com/saw96x","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/saw96x","csdn":"https://blog.csdn.net/saw96x?spm=1001.2101.3001.5343","juejin":"","customs":{}}},"feature":"ture"}]