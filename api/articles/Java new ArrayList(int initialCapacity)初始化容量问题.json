{"title":"Java new ArrayList(int initialCapacity)初始化容量问题","uid":"3a69b8fada749b74d26a9663c4985507","slug":"Java new ArrayList(int initialCapacity)初始化容量问题","date":"2021-08-04T07:35:13.000Z","updated":"2021-08-06T13:49:54.974Z","comments":true,"path":"api/articles/Java new ArrayList(int initialCapacity)初始化容量问题.json","cover":"https://img-blog.csdnimg.cn/e05492f5576b4b0b95bc249924044d9f.jpg","content":"<p>今天看了ArrayList源码，发现了一个不大不小的问题：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public ArrayList(int initialCapacity) &#123;\n        if (initialCapacity &gt; 0) &#123;\n            this.elementData &#x3D; new Object[initialCapacity];\n        &#125; else if (initialCapacity &#x3D;&#x3D; 0) &#123;\n            this.elementData &#x3D; EMPTY_ELEMENTDATA;\n        &#125; else &#123;\n            throw new IllegalArgumentException(&quot;Illegal Capacity: &quot;+\n                                               initialCapacity);\n        &#125;\n    &#125;</code></pre>\n\n<p>这个构造函数咋一看问题不大，给elementData底层数组分配空间嘛，初始化数组的大小了<br>但是实际使用时：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">ArrayList&lt;Integer&gt; a &#x3D; new ArrayList(9);\na.set(1,5);</code></pre>\n<p>抛出了IndexOutOfBoundsException</p>\n<p>结合源码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">public E set(int index, E element) &#123;\n        Objects.checkIndex(index, size);\n        E oldValue &#x3D; elementData(index);\n        elementData[index] &#x3D; element;\n        return oldValue;\n    &#125;</code></pre>\n<p>其中第一行首先检测了下标，参数是index和size，而size是元素个数，也就是说，尽管设置了数组的容量，但针对ArrayList中元素的操作，是根据元素的位置，而不是根据容量来操作。也就是说，至少得有个元素才能set它，没有元素就是set个寂寞。</p>\n<p>因此<code>set(1,5)</code>在第一行直接抛出异常了</p>\n<p>综上所述ArrayList(int initialCapacity) 只是<strong>让ArrayList有了容纳 initialCapacity个元素的潜力，并不能对其中的“位置”操作</strong>。</p>\n<p>PS：这个问题在Java核心技术卷1中就有提到，但我当时直接忘了，果然看了源码才理解的透彻。</p>\n","text":"今天看了ArrayList源码，发现了一个不大不小的问题： public ArrayList(int initialCapacity) &#123; if (initialCapacity &gt; 0) &#123; this.elementData &#x3D; new Ob...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"技术学习","slug":"技术学习","count":5,"path":"api/categories/技术学习.json"}],"tags":[{"name":"Java","slug":"Java","count":4,"path":"api/tags/Java.json"},{"name":"源码分析","slug":"源码分析","count":3,"path":"api/tags/源码分析.json"}],"toc":"","author":{"name":"南望","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/db609a2e507d4a36b32e06b4676aad38.PNG","link":"/","description":"路漫漫其修远兮，吾将上下而求索······","socials":{"github":"https://github.com/saw96x","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/saw96x","csdn":"https://blog.csdn.net/saw96x?spm=1001.2101.3001.5343","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"剑指 Offer 03. 数组中重复的数字的4种解法（Java语言）","uid":"ca5547898d7e053911493b82ed0cb0fa","slug":"剑指 Offer 03. 数组中重复的数字的4种解法（Java语言）","date":"2021-08-04T08:20:41.000Z","updated":"2021-08-06T13:49:19.956Z","comments":true,"path":"api/articles/剑指 Offer 03. 数组中重复的数字的4种解法（Java语言）.json","cover":"https://img-blog.csdnimg.cn/ee9bd76864244e9484ab4ed291062b32.jpg","text":"题目详情找出数组中重复的数字。 在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。 示例 1： 输入：[2, 3, 1, 0, 2, 5, 3]...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"技术学习","slug":"技术学习","count":5,"path":"api/categories/技术学习.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":1,"path":"api/tags/数据结构与算法.json"},{"name":"剑指Offer","slug":"剑指Offer","count":1,"path":"api/tags/剑指Offer.json"}],"author":{"name":"南望","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/db609a2e507d4a36b32e06b4676aad38.PNG","link":"/","description":"路漫漫其修远兮，吾将上下而求索······","socials":{"github":"https://github.com/saw96x","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/saw96x","csdn":"https://blog.csdn.net/saw96x?spm=1001.2101.3001.5343","juejin":"","customs":{}}}},"next_post":{}}